---
/* brak frontmatter */
---

<section
  id="preview-section"
  class="relative mt-2 flex flex-col items-center justify-center gap-4 px-2 pb-20 text-center md:gap-6 md:px-12"
>
  <div
    data-preview-card
    class="flex h-[494px] w-[820px] max-w-[calc(100%-0.5rem)] items-center justify-center rounded-xl bg-black shadow-2xl ring-1 ring-black/10 will-change-transform md:max-w-[513px] lg:max-w-none"
    style="transform: scale(var(--scale, 1)); transform-origin: center;"
  >
    preview
  </div>
</section>

<script>
  (function () {
    const section = document.getElementById('preview-section');
    const card = section && section.querySelector('[data-preview-card]');
    if (!section || !card) return;

    const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    const isSmallViewport = () => window.matchMedia('(max-width: 768px)').matches;

    let ticking = false;

    function update() {
      if (!(section instanceof HTMLElement) || !(card instanceof HTMLElement)) {
        ticking = false;
        return;
      }

      const rect = section.getBoundingClientRect();
      const vh = window.innerHeight || document.documentElement.clientHeight;

      var rawProgress = Math.min(1, Math.max(0, (vh - rect.top) / (vh + rect.height)));
      var easedProgress = 1 - Math.pow(1 - rawProgress, 3);

      var scale = prefersReduced || isSmallViewport() ? 1 : 1 + easedProgress * 0.25;

      if (card.style && typeof card.style.setProperty === 'function') {
        card.style.setProperty('--scale', String(scale));
      }
      ticking = false;
    }

    function onScroll() {
      if (ticking) return;
      ticking = true;
      requestAnimationFrame(update);
    }

    onScroll();
    window.addEventListener('scroll', onScroll, { passive: true });
    window.addEventListener('resize', onScroll);
  })();
</script>
