---
import { Image } from 'astro:assets';

const projects = [
  {
    id: 'hitech',
    title: 'Hitech',
    image: '/assets/product4.png',
    alt: 'Hitech — landing page dla SaaS',
    width: 1200,
    height: 800,
    tags: ['UI/UX Design', 'Web Development'],
  },
  {
    id: 'invert',
    title: 'Invert',
    image: '/assets/product3.png',
    alt: 'Invert — redesign strony produktowej',
    width: 1200,
    height: 800,
    tags: ['Web Design', 'Web Development'],
  },
  {
    id: 'network',
    title: 'Network',
    image: '/assets/product2.png',
    alt: 'Network — dashboard aplikacji',
    width: 1200,
    height: 800,
    tags: ['Web Design', 'Web Development'],
  },
  {
    id: 'waveless',
    title: 'Waveless',
    image: '/assets/product1.png',
    alt: 'Waveless — e-commerce UI',
    width: 1200,
    height: 800,
    tags: ['Web Design', 'Web Development'],
  },
];
---

<section
  aria-labelledby="projects-heading"
  class="relative isolate mx-auto flex max-w-[1320px] flex-col items-center justify-center gap-4 px-5 py-20 text-center md:gap-8 md:px-10"
>
  <div
    class="rounded-full bg-[#F2F7F7] px-4 py-2 text-xs font-medium text-gray-700 shadow-sm md:text-sm"
  >
    <span>20+ PRODUCTS LAUNCHED</span>
  </div>

  <h2 id="projects-heading" class="text-[32px] font-semibold text-black md:text-[42px]">
    Trusted by startups to<br />scale fast
  </h2>

  <div class="grid grid-cols-1 gap-3 md:grid-cols-2">
    {
      projects.map((project, i) => (
        <article
          data-index={i}
          class="project-card flex transform flex-col items-start gap-2 rounded-2xl bg-white p-2 text-black"
        >
          <figure class="w-full">
            <Image
              src={project.image}
              alt={project.alt}
              width={project.width}
              height={project.height}
              loading="lazy"
              decoding="async"
              class="h-[340px] w-full rounded-md object-cover md:h-auto md:object-contain lg:h-auto"
            />
            <figcaption class="flex flex-col gap-5 p-4 text-start">
              <p class="text-lg font-semibold">{project.title}</p>
              <div class="flex gap-2">
                {project.tags.map((tag) => (
                  <div class="rounded-full border border-[#CEDADD] px-3 py-1">
                    <p class="text-gray-custom text-sm">{tag}</p>
                  </div>
                ))}
              </div>
            </figcaption>
          </figure>
        </article>
      ))
    }
  </div>

  <script is:inline>
    // Dodajemy klasę informującą, że JS jest dostępny
    document.documentElement.classList.add('js');

    // Obserwujemy karty i nadajemy opóźnienie animacji w zależności od indeksu
    const cards = document.querySelectorAll('.project-card');

    if (cards.length) {
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const idx = Number(entry.target.dataset.index ?? 0);
              // progresywne opóźnienie: stagger = idx * 120ms, capped at 120ms
              const stagger = Math.min(idx * 120, 120);
              entry.target.style.setProperty('--enter-delay', `${stagger}ms`);
              entry.target.classList.add('is-visible');
              observer.unobserve(entry.target);
            }
          });
        },
        { threshold: 0.12, rootMargin: '0px 0px -8% 0px' }
      );

      cards.forEach((card) => observer.observe(card));
    }
  </script>
</section>
